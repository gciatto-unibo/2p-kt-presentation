@startuml
interface Listener<T> << (T,#3495eb) typealias >>  {
  **alias for:** (T) -> Unit
}

interface Channel<T> {
    + streamTerm: Struct
    + isClosed: Boolean
    --
    + addListener(listener: Listener<T?>)
    + removeListener(listener: Listener<T?>)
    + clearListeners()
    ..
    + close()
}

interface InputChannel<T> {
    + isOver: Boolean
    + available: Boolean
    --
    + read(): T?
    + peek(): T?
}

interface OutputChannel<T> {
    + write(T)
    + flush()
}

Channel "1" *-left- "N" Listener
InputChannel --|> Channel
OutputChannel --|> Channel

@enduml
