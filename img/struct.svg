<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="143px" preserveAspectRatio="none" style="width:628px;height:143px;" version="1.1" viewBox="0 0 628 143" width="628px" zoomAndPan="magnify"><defs/><g><!--MD5=[9d35236b92952560f647498cf8a29acb]
class Term--><rect fill="#FEFECE" height="124.8281" id="Term" style="stroke: #A80036; stroke-width: 1.5;" width="258" x="6" y="8"/><ellipse cx="115.25" cy="24" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M111.1719,19.7656 L111.1719,17.6094 L118.5625,17.6094 L118.5625,19.7656 L116.0938,19.7656 L116.0938,27.8438 L118.5625,27.8438 L118.5625,30 L111.1719,30 L111.1719,27.8438 L113.6406,27.8438 L113.6406,19.7656 L111.1719,19.7656 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="31" x="135.75" y="28.1543">Term</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="263" y1="40" y2="40"/><ellipse cx="17" cy="51" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="26" y="54.2104">isGround: Boolean</text><ellipse cx="17" cy="63.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="26" y="67.0151">variables: Sequence&lt;Var&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="263" y1="73.6094" y2="73.6094"/><ellipse cx="17" cy="84.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="26" y="87.8198">equals(other: Any): Boolean</text><ellipse cx="17" cy="97.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="26" y="100.6245">structurallyEquals(other: Term): Boolean</text><ellipse cx="17" cy="110.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="26" y="113.4292">freshCopy(): Term</text><ellipse cx="17" cy="123.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="26" y="126.2339">toString(): String</text><!--MD5=[eb0f4986160aea42d9ece72995cb24c7]
class Struct--><rect fill="#FEFECE" height="124.8281" id="Struct" style="stroke: #A80036; stroke-width: 1.5;" width="293" x="324" y="8"/><ellipse cx="447.25" cy="24" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M443.1719,19.7656 L443.1719,17.6094 L450.5625,17.6094 L450.5625,19.7656 L448.0938,19.7656 L448.0938,27.8438 L450.5625,27.8438 L450.5625,30 L443.1719,30 L443.1719,27.8438 L445.6406,27.8438 L445.6406,19.7656 L443.1719,19.7656 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="38" x="467.75" y="28.1543">Struct</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="325" x2="616" y1="40" y2="40"/><ellipse cx="335" cy="51" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="344" y="54.2104">functor: String</text><ellipse cx="335" cy="63.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="344" y="67.0151">arity: Int</text><ellipse cx="335" cy="76.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="344" y="79.8198">args: Array&lt;Term&gt;</text><ellipse cx="335" cy="89.4141" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="344" y="92.6245">indicator: Indicator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="325" x2="616" y1="99.2188" y2="99.2188"/><ellipse cx="335" cy="110.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="344" y="113.4292">get(index: Int): Term</text><ellipse cx="335" cy="123.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="101" x="344" y="126.2339">of(functor: String,</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="48" x="449" y="126.2339">varargs</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="110" x="501" y="126.2339">args: Term): Struct</text><!--MD5=[f626f12429d76bc694cd64f7f069082d]
reverse link Term to Struct--><path d="M284.74,70.5 C297.74,70.5 310.9,70.5 323.88,70.5 " fill="none" id="Term&lt;-Struct" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="284.46,77.5,264.46,70.5,284.46,63.5,284.46,77.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ef2c48ad532f47e7686df82f6b788f73]
@startuml
left to right direction
skinparam shadowing false

interface Term {
  + isGround: Boolean
  + variables: Sequence<Var>
  + equals(other: Any): Boolean
  + structurallyEquals(other: Term): Boolean
  + freshCopy(): Term
  + toString(): String
}
interface Struct {
  + functor: String
  + arity: Int
  + args: Array<Term>
  + indicator: Indicator
  + get(index: Int): Term
  + {static} of(functor: String, **varargs** args: Term): Struct
}

Term <|- - Struct

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.10+9
Operating System: Linux
Default Encoding: UTF-8
Language: it
Country: IT
--></g></svg>