<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="554px" preserveAspectRatio="none" style="width:726px;height:554px;" version="1.1" viewBox="0 0 726 554" width="726px" zoomAndPan="magnify"><defs><filter height="300%" id="f1iqn5zoi4ksp0" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[71a60e08c714b88e623cf93f13d49c3c]
class ExecutionContextAware--><rect codeLine="2" fill="#FEFECE" filter="url(#f1iqn5zoi4ksp0)" height="188.8516" id="ExecutionContextAware" style="stroke:#A80036;stroke-width:1.5;" width="269" x="433" y="352"/><ellipse cx="488.25" cy="368" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M484.1719,363.7656 L484.1719,361.6094 L491.5625,361.6094 L491.5625,363.7656 L489.0938,363.7656 L489.0938,371.8438 L491.5625,371.8438 L491.5625,374 L484.1719,374 L484.1719,371.8438 L486.6406,371.8438 L486.6406,363.7656 L484.1719,363.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="150" x="508.75" y="372.1543">ExecutionContextAware</text><line style="stroke:#A80036;stroke-width:1.5;" x1="434" x2="701" y1="384" y2="384"/><ellipse cx="444" cy="395" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="453" y="398.2104">libraries: Libraries</text><ellipse cx="444" cy="407.8047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="453" y="411.0151">flags: FlagStore</text><ellipse cx="444" cy="420.6094" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="453" y="423.8198">staticKb: Theory</text><ellipse cx="444" cy="433.4141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="453" y="436.6245">dynamicKb: Theory</text><ellipse cx="444" cy="446.2188" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="453" y="449.4292">operators: OperatorSet</text><ellipse cx="444" cy="459.0234" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="453" y="462.2339">inputChannels: InputStore</text><ellipse cx="444" cy="471.8281" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="453" y="475.0386">outputChannels: OutputStore</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="434" x2="701" y1="481.6328" y2="481.6328"/><ellipse cx="444" cy="492.6328" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="453" y="495.8433">standardInput: InputChannel&lt;String&gt;</text><ellipse cx="444" cy="505.4375" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="453" y="508.6479">standardOutput: OutputChannel&lt;String&gt;</text><ellipse cx="444" cy="518.2422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="453" y="521.4526">standardError: OutputChannel&lt;String&gt;</text><ellipse cx="444" cy="531.0469" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="453" y="534.2573">warnings: OutputChannel&lt;PrologWarning&gt;</text><!--MD5=[7e0cc054e68485d8dbab588155cf841a]
class Solver--><rect codeLine="17" fill="#FEFECE" filter="url(#f1iqn5zoi4ksp0)" height="99.2188" id="Solver" style="stroke:#A80036;stroke-width:1.5;" width="391" x="7" y="397"/><ellipse cx="179.25" cy="413" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M175.1719,408.7656 L175.1719,406.6094 L182.5625,406.6094 L182.5625,408.7656 L180.0938,408.7656 L180.0938,416.8438 L182.5625,416.8438 L182.5625,419 L175.1719,419 L175.1719,416.8438 L177.6406,416.8438 L177.6406,408.7656 L175.1719,408.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="38" x="199.75" y="417.1543">Solver</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="397" y1="429" y2="429"/><ellipse cx="18" cy="440" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="365" x="27" y="443.2104">solve(goal: Struct, options: SolveOptions): Sequence&lt;Solution&gt;</text><ellipse cx="18" cy="452.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="456.0151">solveList(goal: Struct, options: SolveOptions): List&lt;Solution&gt;</text><ellipse cx="18" cy="465.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="27" y="468.8198">solveOnce(goal: Struct, options: SolveOptions): Solution</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="8" x2="397" y1="475.4141" y2="475.4141"/><ellipse cx="18" cy="486.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="27" y="489.6245">clone(): Solver</text><!--MD5=[b8f9c9f402fdb0639661b25476f0741f]
class ExecutionContext--><rect codeLine="25" fill="#FEFECE" filter="url(#f1iqn5zoi4ksp0)" height="150.4375" id="ExecutionContext" style="stroke:#A80036;stroke-width:1.5;" width="290" x="422.5" y="74.5"/><ellipse cx="507.75" cy="90.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M503.6719,86.2656 L503.6719,84.1094 L511.0625,84.1094 L511.0625,86.2656 L508.5938,86.2656 L508.5938,94.3438 L511.0625,94.3438 L511.0625,96.5 L503.6719,96.5 L503.6719,94.3438 L506.1406,94.3438 L506.1406,86.2656 L503.6719,86.2656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="111" x="528.25" y="94.6543">ExecutionContext</text><line style="stroke:#A80036;stroke-width:1.5;" x1="423.5" x2="711.5" y1="106.5" y2="106.5"/><ellipse cx="433.5" cy="117.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="442.5" y="120.7104">procedure: Struct?</text><ellipse cx="433.5" cy="130.3047" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="442.5" y="133.5151">substitution: Substitution.Unifier</text><ellipse cx="433.5" cy="143.1094" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="442.5" y="146.3198">prologStackTrace: List&lt;Struct&gt;</text><ellipse cx="433.5" cy="155.9141" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="177" x="442.5" y="159.1245">customData: CustomDataStore</text><line style="stroke:#A80036;stroke-width:1.0;" x1="423.5" x2="711.5" y1="165.7188" y2="165.7188"/><ellipse cx="433.5" cy="176.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="136" x="442.5" y="179.9292">createSolver(...): Solver</text><ellipse cx="433.5" cy="189.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="442.5" y="192.7339">createMutableSolver(...): MutableSolver</text><ellipse cx="433.5" cy="202.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="442.5" y="205.5386">update(...): ExecutionContext</text><ellipse cx="433.5" cy="215.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="442.5" y="218.3433">apply(sideEffect: SideEffect): ExecutionContext</text><!--MD5=[3e143235bd6fa0cae4b93f541904023f]
class MutableSolver--><rect codeLine="40" fill="#FEFECE" filter="url(#f1iqn5zoi4ksp0)" height="284.875" id="MutableSolver" style="stroke:#A80036;stroke-width:1.5;" width="309" x="48" y="7"/><ellipse cx="154.25" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M150.1719,18.7656 L150.1719,16.6094 L157.5625,16.6094 L157.5625,18.7656 L155.0938,18.7656 L155.0938,26.8438 L157.5625,26.8438 L157.5625,29 L150.1719,29 L150.1719,26.8438 L152.6406,26.8438 L152.6406,18.7656 L150.1719,18.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="88" x="174.75" y="27.1543">MutableSolver</text><line style="stroke:#A80036;stroke-width:1.5;" x1="49" x2="356" y1="39" y2="39"/><ellipse cx="59" cy="50" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="68" y="53.2104">loadLibrary(library: AliasedLibrary)</text><ellipse cx="59" cy="62.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="68" y="66.0151">unloadLibrary(library: AliasedLibrary</text><ellipse cx="59" cy="75.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="68" y="78.8198">setLibraries(libraries: Libraries)</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="49" x2="356" y1="85.4141" y2="85.4141"/><ellipse cx="59" cy="96.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="68" y="99.6245">loadStaticKb(theory: Theory)</text><ellipse cx="59" cy="109.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="68" y="112.4292">loadStaticClauses(clauses: Iterable&lt;Clause&gt;)</text><ellipse cx="59" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="68" y="125.2339">appendStaticKb(theory: Theory)</text><ellipse cx="59" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="68" y="138.0386">resetStaticKb()</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="49" x2="356" y1="144.6328" y2="144.6328"/><ellipse cx="59" cy="155.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="177" x="68" y="158.8433">loadDynamicKb(theory: Theory)</text><ellipse cx="59" cy="168.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="68" y="171.6479">loadDynamicClauses(clauses: Iterable&lt;Clause&gt;)</text><ellipse cx="59" cy="181.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="68" y="184.4526">appendDynamicKb(theory: Theory)</text><ellipse cx="59" cy="194.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="68" y="197.2573">resetDynamicKb()</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="49" x2="356" y1="203.8516" y2="203.8516"/><ellipse cx="59" cy="214.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="136" x="68" y="218.062">assertA(clause: Clause)</text><ellipse cx="59" cy="227.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="68" y="230.8667">assertZ(clause: Clause)</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="49" x2="356" y1="237.4609" y2="237.4609"/><ellipse cx="59" cy="248.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="68" y="251.6714">retract(clause: Clause): RetractResult&lt;Theory&gt;</text><ellipse cx="59" cy="261.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="68" y="264.4761">retractAll(clause: Clause): RetractResult&lt;Theory&gt;</text><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="49" x2="356" y1="271.0703" y2="271.0703"/><ellipse cx="59" cy="282.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="68" y="285.2808">setFlag(name: String, value: Term)</text><!--MD5=[9e5b0f1b810f6528d4b9cc432c673663]
link ExecutionContext to ExecutionContextAware--><path codeLine="37" d="M567.5,224.56 C567.5,256.95 567.5,295.69 567.5,331.62 " fill="none" id="ExecutionContext-to-ExecutionContextAware" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="574.5,331.81,567.5,351.81,560.5,331.81,574.5,331.81" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[60aa3810c3aaea966c52a83be9185163]
link Solver to ExecutionContextAware--><path codeLine="38" d="M398.19,446.5 C403.07,446.5 407.95,446.5 412.84,446.5 " fill="none" id="Solver-to-ExecutionContextAware" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="412.91,439.5,432.91,446.5,412.91,453.5,412.91,439.5" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b4fafa61f216fa5e02dc10211d7713fa]
link MutableSolver to Solver--><path codeLine="64" d="M202.5,292.38 C202.5,321.79 202.5,351.49 202.5,376.81 " fill="none" id="MutableSolver-to-Solver" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="209.5,376.94,202.5,396.94,195.5,376.94,209.5,376.94" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[85f0b9469b86b33bc99cd087c51d4348]
@startuml

interface ExecutionContextAware {
    + libraries: Libraries
    + flags: FlagStore
    + staticKb: Theory
    + dynamicKb: Theory
    + operators: OperatorSet
    + inputChannels: InputStore
    + outputChannels: OutputStore
    ..
    + standardInput: InputChannel<String>
    + standardOutput: OutputChannel<String>
    + standardError: OutputChannel<String>
    + warnings: OutputChannel<PrologWarning>
}

interface Solver {
    + solve(goal: Struct, options: SolveOptions): Sequence<Solution>
    + solveList(goal: Struct, options: SolveOptions): List<Solution>
    + solveOnce(goal: Struct, options: SolveOptions): Solution
    ..
    + clone(): Solver
}

interface ExecutionContext {
    + procedure: Struct?
    + substitution: Substitution.Unifier
    + prologStackTrace: List<Struct>
    + customData: CustomDataStore
    - -
    + createSolver(...): Solver
    + createMutableSolver(...): MutableSolver
    + update(...): ExecutionContext
    + apply(sideEffect: SideEffect): ExecutionContext
}

ExecutionContext -down-|> ExecutionContextAware
Solver -right-|> ExecutionContextAware

interface MutableSolver {
      + loadLibrary(library: AliasedLibrary)
      + unloadLibrary(library: AliasedLibrary
      + setLibraries(libraries: Libraries)
      ..
      + loadStaticKb(theory: Theory)
      + loadStaticClauses(clauses: Iterable<Clause>)
      + appendStaticKb(theory: Theory)
      + resetStaticKb()
      ..
      + loadDynamicKb(theory: Theory)
      + loadDynamicClauses(clauses: Iterable<Clause>)
      + appendDynamicKb(theory: Theory)
      + resetDynamicKb()
      ..
      + assertA(clause: Clause)
      + assertZ(clause: Clause)
      ..
      + retract(clause: Clause): RetractResult<Theory>
      + retractAll(clause: Clause): RetractResult<Theory>
      ..
      + setFlag(name: String, value: Term)
}

MutableSolver -down-|> Solver


@enduml

PlantUML version 1.2021.00(Sun Jan 10 11:25:05 CET 2021)
(MIT source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: it
Country: IT
--></g></svg>