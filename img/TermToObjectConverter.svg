<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="145px" preserveAspectRatio="none" style="width:363px;height:145px;background:#FFFFFF;" version="1.1" viewBox="0 0 363 145" width="363px" zoomAndPan="magnify"><defs><filter height="300%" id="faia827p66nvx" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[7c36c28b74654eec9b98e401b492942b]
class TermToObjectConverter--><rect codeLine="1" fill="#FEFECE" filter="url(#faia827p66nvx)" height="124.8281" id="TermToObjectConverter" style="stroke:#A80036;stroke-width:1.5;" width="342" x="7" y="7"/><ellipse cx="102.25" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M103.2031,19.7813 L104.9219,19.7813 C105.3125,19.7813 105.5,19.75 105.625,19.6719 C105.8906,19.5156 106.0313,19.2344 106.0313,18.9375 C106.0313,18.6719 105.9219,18.4063 105.6875,18.2344 C105.5156,18.125 105.375,18.0938 104.9219,18.0938 L99.7813,18.0938 C99.3438,18.0938 99.2188,18.1094 99.0625,18.2031 C98.8125,18.3594 98.6563,18.6563 98.6563,18.9375 C98.6563,19.2188 98.7969,19.4688 99.0156,19.6406 C99.1719,19.75 99.3594,19.7813 99.7813,19.7813 L101.5,19.7813 L101.5,26.2969 L99.7813,26.2969 C99.3438,26.2969 99.2188,26.3125 99.0625,26.4219 C98.8125,26.5781 98.6563,26.8594 98.6563,27.1563 C98.6563,27.4063 98.7969,27.6719 99.0156,27.8281 C99.1719,27.9531 99.375,28 99.7813,28 L104.9219,28 C105.6719,28 106.0313,27.7188 106.0313,27.1563 C106.0313,26.875 105.9219,26.625 105.6875,26.4531 C105.5156,26.3281 105.375,26.2969 104.9219,26.2969 L103.2031,26.2969 L103.2031,19.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="143" x="122.75" y="27.1543">TermToObjectConverter</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="348" y1="39" y2="39"/><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="348" y1="47" y2="47"/><ellipse cx="18" cy="58" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="27" y="61.2104">convertInto(type: KClass&lt;*&gt;, term: Term): Any?</text><ellipse cx="18" cy="70.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="74.0151">possibleConversions(term: Term): Sequence&lt;Any?&gt;</text><ellipse cx="18" cy="83.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="27" y="86.8198">admissibleTypes(term: Term): Set&lt;KClass&lt;*&gt;&gt;</text><ellipse cx="18" cy="96.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="27" y="99.6245">priorityOfConversion(type: KClass&lt;*&gt;, term: Term): Int?</text><ellipse cx="18" cy="109.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="27" y="112.4292">mostAdequateType(term: Term): KClass&lt;*&gt;</text><ellipse cx="18" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="27" y="125.2339">convert(term: Term): Any?</text><!--MD5=[75dd4bb1165dd3066fd44d2066097e66]
@startuml
interface TermToObjectConverter {
    + convertInto(type: KClass<*>, term: Term): Any?
    + possibleConversions(term: Term): Sequence<Any?>
    + admissibleTypes(term: Term): Set<KClass<*>>
    + priorityOfConversion(type: KClass<*>, term: Term): Int?
    + mostAdequateType(term: Term): KClass<*>
    + convert(term: Term): Any?
}
@enduml

PlantUML version 1.2021.6beta6(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>